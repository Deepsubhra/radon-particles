tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
  targetNamespace: "radon.blueprints.examples"
topology_template:
  node_templates:
    PubsMQTT_0:
      type: radon.nodes.datapipeline.destination.PubsMQTT
      metadata:
        x: "1127"
        y: "206"
        displayName: "PubsMQTT"
      properties:
        Broker_URI: "tcp://localhost:8888"
        schedulingStrategy: "CRON_DRIVEN"
        name: "PubsMQTT"
        Quality_of_Service: 1
        schedulingPeriodCRON: "* * * * * ?"
        Client_ID: "Nifi_Deep"
        TopicName: "Deep"
      requirements:
        - host:
            node: Nifi_0
            relationship: con_HostedOn_3
            capability: host
    ConsMQTT_0:
      type: radon.nodes.datapipeline.source.ConsMQTT
      metadata:
        x: "267"
        y: "199"
        displayName: "ConsMQTT"
      properties:
        Broker_URI: "tcp://localhost:8888"
        schedulingStrategy: "CRON_DRIVEN"
        Max_Queue_Size: 1024
        name: "ConsMQTT"
        Quality_of_Service: 1
        schedulingPeriodCRON: "* * * * * ?"
        Client_ID: "Deep_Nifi"
        TopicName: "New"
      requirements:
        - host:
            node: Nifi_0
            relationship: con_HostedOn_2
            capability: host
        - connectToPipeline:
            node: Encrypt_0
            relationship: con_ConnectNifiLocal_2
            capability: ConnectToPipeline
    Encrypt_0:
      type: radon.nodes.datapipeline.MidwayPB.Encrypt
      metadata:
        x: "355"
        y: "52"
        displayName: "Encrypt"
      properties:
        name: "Encrypt"
        Password: "Deepsubhra Guha Roy"
      requirements:
        - ConnectToPipeline:
            node: Decrypt_0
            relationship: con_ConnectNifiLocal_1
            capability: ConnectToPipeline
        - host:
            node: Nifi_0
            relationship: con_HostedOn_4
            capability: host
    MosquittoBroker_0:
      type: radon.nodes.mqtt.MosquittoBroker
      metadata:
        x: "747"
        y: "633"
        displayName: "MosquittoBroker"
      properties:
        port: 8888
        component_version: 1.1
      requirements:
        - host:
            node: OpenStack_0
            relationship: con_HostedOn_0
            capability: host
    Decrypt_0:
      type: radon.nodes.datapipeline.MidwayPB.Decrypt
      metadata:
        x: "1058"
        y: "60"
        displayName: "Decrypt"
      properties:
        name: "Decrypt"
        Password: "Deepsubhra Guha Roy"
      requirements:
        - ConnectToPipeline:
            node: PubsMQTT_0
            relationship: con_ConnectNifiLocal_0
            capability: ConnectToPipeline
        - host:
            node: Nifi_0
            relationship: con_HostedOn_5
            capability: host
    OpenStack_0:
      type: radon.nodes.VM.OpenStack
      metadata:
        x: "747"
        y: "507"
        displayName: "OpenStack"
      properties:
        key_name: "Guha_Roy_RADON"
        flavor: "6b254b9e-db1c-40de-994c-07d69dd732a6"
        image: "13a94b11-98ee-43a4-ad29-00ae97e8f790"
        ssh_username: "centos"
        name: "MQTT_Datapipeline_Deep_CRON_Mosq_Port"
        network: "provider_64_net"
    Nifi_0:
      type: radon.nodes.nifi.Nifi
      metadata:
        x: "747"
        y: "389"
        displayName: "Nifi"
      properties:
        port: 8080
        component_version: "1.12.1"
      requirements:
        - host:
            node: OpenStack_0
            relationship: con_HostedOn_1
            capability: host
  relationship_templates:
    con_HostedOn_2:
      type: tosca.relationships.HostedOn
    con_HostedOn_3:
      type: tosca.relationships.HostedOn
    con_HostedOn_0:
      type: tosca.relationships.HostedOn
    con_HostedOn_1:
      type: tosca.relationships.HostedOn
    con_ConnectNifiLocal_0:
      type: radon.relationships.datapipeline.ConnectNifiLocal
    con_ConnectNifiLocal_2:
      type: radon.relationships.datapipeline.ConnectNifiLocal
    con_ConnectNifiLocal_1:
      type: radon.relationships.datapipeline.ConnectNifiLocal
    con_HostedOn_4:
      type: tosca.relationships.HostedOn
    con_HostedOn_5:
      type: tosca.relationships.HostedOn
